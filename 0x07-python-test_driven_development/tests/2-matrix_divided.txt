The "2-matrix_divided" module
============================

Using "matrix_divided"
---------------------

Import module:

  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test one:

  >>> matrix_divided([[6, 9, 21], [24, 12, 15]], 3)
  [[2.0, 3.0, 7.0], [8.0, 4.0, 5.0]]

Test two:

  >>> matrix_divided([[6, 9, 21], [24, 12, 15]], 0)
  Traceback (most recent call last):
  ...
  ZeroDivisionError: division by zero

Test three str:
  >>> matrix_divided("foo", 5)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

Test four:
  >>> matrix_divided([[6, 9, 21], [24, 12, 15]], 'k')
  Traceback (most recent call last):
  ...
  TypeError: div must be a number

Test five:
  >>> matrix_divided([[6, 9, 21], ['k', 12, 15]], 3)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

Test six:

  >>> matrix_divided([[6, 9], [24, 12, 15]], 3)
  Traceback (most recent call last):
  ...
  TypeError: Each row of the matrix must have the same size

Test division by inf:
    >>> matrix_divided([[4, 5, 2], [5, 4, 1]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test seven:
  >>> matrix_divided( ,3)
  Traceback (most recent call last):
  ...
  TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test seven:
  >>> matrix_divided()
  Traceback (most recent call last):
  ...
  TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
